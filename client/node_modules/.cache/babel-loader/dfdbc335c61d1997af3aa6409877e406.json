{"ast":null,"code":"import React from'react';import'./App.css';import{BrowserRouter as Router,Route,Switch,withRouter}from'react-router-dom';import{Provider}from'react-redux';import store from'./store';import jwtDecode from'jwt-decode';import setAuthToken from'./utils/setAuthToken';import PrivateRoute from'./utils/PrivateRoute';import Login from'./pages/Login';import Register from'./pages/Register';import Dashboard from'./pages/Dashboard';import CssBaseline from'@material-ui/core/CssBaseline';import NotFound from'./pages/NotFound';// redux\nimport{setCurrentUser}from'./actions/authActions';// // persistent login\nif(localStorage.squad){setAuthToken(localStorage.squad);// decode token and get user info\nvar decoded=jwtDecode(localStorage.squad);// set user and isAuth\nstore.dispatch(setCurrentUser(decoded));// check for expired token\n// const currentTime = Date.now() / 1000;\n// if (decoded.exp < currentTime) {\n//   store.dispatch(logoutUser());\n//   window.location.href = '/';\n// }\n}function App(){return React.createElement(\"div\",{className:\"App\"},React.createElement(CssBaseline,null),React.createElement(Provider,{store:store},React.createElement(Router,null,React.createElement(\"div\",{className:\"application\"},React.createElement(Switch,null,React.createElement(Route,{exact:true,path:\"/\",component:Login}),React.createElement(Route,{exact:true,path:\"/register\",component:Register}),React.createElement(PrivateRoute,{path:\"/dashboard\",component:Dashboard}),React.createElement(Route,{component:NotFound}))))));}export default withRouter(App);","map":{"version":3,"sources":["/Users/alecdown/apps/squad/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","Provider","store","jwtDecode","setAuthToken","PrivateRoute","Login","Register","Dashboard","CssBaseline","NotFound","setCurrentUser","localStorage","squad","decoded","dispatch","App"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAyCC,MAAzC,CAAiDC,UAAjD,KAAmE,kBAAnE,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CAEA;AACA,OAASC,cAAT,KAA+B,uBAA/B,CAEA;AACA,GAAIC,YAAY,CAACC,KAAjB,CAAwB,CACtBT,YAAY,CAACQ,YAAY,CAACC,KAAd,CAAZ,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAGX,SAAS,CAACS,YAAY,CAACC,KAAd,CAAzB,CAEA;AACAX,KAAK,CAACa,QAAN,CAAeJ,cAAc,CAACG,OAAD,CAA7B,EAEA;AACA;AACA;AACA;AACA;AACA;AACD,CAED,QAASE,CAAAA,GAAT,EAAe,CACb,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,oBAAC,WAAD,MADF,CAEE,oBAAC,QAAD,EAAU,KAAK,CAAEd,KAAjB,EACE,oBAAC,MAAD,MACE,2BAAK,SAAS,CAAC,aAAf,EACE,oBAAC,MAAD,MACE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,CAAsB,SAAS,CAAEI,KAAjC,EADF,CAEE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,WAAlB,CAA8B,SAAS,CAAEC,QAAzC,EAFF,CAGE,oBAAC,YAAD,EAAc,IAAI,CAAC,YAAnB,CAAgC,SAAS,CAAEC,SAA3C,EAHF,CAIE,oBAAC,KAAD,EAAO,SAAS,CAAEE,QAAlB,EAJF,CADF,CADF,CADF,CAFF,CADF,CAiBD,CAED,cAAeV,CAAAA,UAAU,CAACgB,GAAD,CAAzB","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwtDecode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './utils/PrivateRoute';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Dashboard from './pages/Dashboard';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport NotFound from './pages/NotFound';\n\n// redux\nimport { setCurrentUser } from './actions/authActions';\n\n// // persistent login\nif (localStorage.squad) {\n  setAuthToken(localStorage.squad);\n\n  // decode token and get user info\n  const decoded = jwtDecode(localStorage.squad);\n\n  // set user and isAuth\n  store.dispatch(setCurrentUser(decoded));\n\n  // check for expired token\n  // const currentTime = Date.now() / 1000;\n  // if (decoded.exp < currentTime) {\n  //   store.dispatch(logoutUser());\n  //   window.location.href = '/';\n  // }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Provider store={store}>\n        <Router>\n          <div className=\"application\">\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}