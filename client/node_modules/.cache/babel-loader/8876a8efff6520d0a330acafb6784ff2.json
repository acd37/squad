{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_USER_SQUAD, CREATE_MESSAGE } from './types';\nexport const getUserSquad = () => dispatch => {\n  axios.get('/api/squad').then(res => {\n    dispatch({\n      type: SET_USER_SQUAD,\n      payload: res.data ? res.data : {}\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const createNewSquad = squadName => dispatch => {\n  axios.post('/api/squad/create', {\n    squadName\n  }).then(res => {\n    dispatch({\n      type: SET_USER_SQUAD,\n      payload: res.data\n    });\n    dispatch({\n      type: CREATE_MESSAGE,\n      payload: {\n        squad: res.data.message\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const joinSquad = invitationCode => dispatch => {\n  axios.put('/api/squad/join', {\n    invitationCode\n  }).then(res => {\n    dispatch({\n      type: SET_USER_SQUAD,\n      payload: res.data.squad\n    });\n    dispatch({\n      type: CREATE_MESSAGE,\n      payload: {\n        squad: res.data.message\n      }\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const getSquadMembers = () => dispatch => {// axios.get('/api/')\n};","map":{"version":3,"sources":["/Users/alecdown/apps/squad/client/src/actions/squadActions.js"],"names":["axios","GET_ERRORS","SET_USER_SQUAD","CREATE_MESSAGE","getUserSquad","dispatch","get","then","res","type","payload","data","catch","err","response","createNewSquad","squadName","post","squad","message","joinSquad","invitationCode","put","getSquadMembers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,cAArC,QAA2D,SAA3D;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMC,QAAQ,IAAI;AAC5CL,EAAAA,KAAK,CACFM,GADH,CACO,YADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,cADC;AAEPQ,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,GAAWH,GAAG,CAACG,IAAf,GAAsB;AAFxB,KAAD,CAAR;AAID,GAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZR,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFf,KAAD,CAAR;AAID,GAbH;AAcD,CAfM;AAiBP,OAAO,MAAMI,cAAc,GAAGC,SAAS,IAAIX,QAAQ,IAAI;AACrDL,EAAAA,KAAK,CACFiB,IADH,CACQ,mBADR,EAC6B;AAAED,IAAAA;AAAF,GAD7B,EAEGT,IAFH,CAEQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,cADC;AAEPQ,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEN,cADC;AAEPO,MAAAA,OAAO,EAAE;AACPQ,QAAAA,KAAK,EAAEV,GAAG,CAACG,IAAJ,CAASQ;AADT;AAFF,KAAD,CAAR;AAMD,GAbH,EAcGP,KAdH,CAcSC,GAAG,IAAI;AACZR,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFf,KAAD,CAAR;AAID,GAnBH;AAoBD,CArBM;AAuBP,OAAO,MAAMS,SAAS,GAAGC,cAAc,IAAIhB,QAAQ,IAAI;AACrDL,EAAAA,KAAK,CACFsB,GADH,CACO,iBADP,EAC0B;AAAED,IAAAA;AAAF,GAD1B,EAEGd,IAFH,CAEQC,GAAG,IAAI;AACXH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,cADC;AAEPQ,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASO;AAFX,KAAD,CAAR;AAIAb,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEN,cADC;AAEPO,MAAAA,OAAO,EAAE;AACPQ,QAAAA,KAAK,EAAEV,GAAG,CAACG,IAAJ,CAASQ;AADT;AAFF,KAAD,CAAR;AAMD,GAbH,EAcGP,KAdH,CAcSC,GAAG,IAAI;AACZR,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaH;AAFf,KAAD,CAAR;AAID,GAnBH;AAoBD,CArBM;AAuBP,OAAO,MAAMY,eAAe,GAAG,MAAMlB,QAAQ,IAAI,CAC/C;AACD,CAFM","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, SET_USER_SQUAD, CREATE_MESSAGE } from './types';\n\nexport const getUserSquad = () => dispatch => {\n  axios\n    .get('/api/squad')\n    .then(res => {\n      dispatch({\n        type: SET_USER_SQUAD,\n        payload: res.data ? res.data : {}\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const createNewSquad = squadName => dispatch => {\n  axios\n    .post('/api/squad/create', { squadName })\n    .then(res => {\n      dispatch({\n        type: SET_USER_SQUAD,\n        payload: res.data\n      });\n      dispatch({\n        type: CREATE_MESSAGE,\n        payload: {\n          squad: res.data.message\n        }\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const joinSquad = invitationCode => dispatch => {\n  axios\n    .put('/api/squad/join', { invitationCode })\n    .then(res => {\n      dispatch({\n        type: SET_USER_SQUAD,\n        payload: res.data.squad\n      });\n      dispatch({\n        type: CREATE_MESSAGE,\n        payload: {\n          squad: res.data.message\n        }\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n};\n\nexport const getSquadMembers = () => dispatch => {\n  // axios.get('/api/')\n};\n"]},"metadata":{},"sourceType":"module"}