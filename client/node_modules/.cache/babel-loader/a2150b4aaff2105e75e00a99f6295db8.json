{"ast":null,"code":"import _slicedToArray from \"/Users/alecdown/apps/squad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdown/apps/squad/client/src/pages/Streaks.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Divider, Grid, Button } from '@material-ui/core/';\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport LocalBarOutlinedIcon from '@material-ui/icons/LocalBarOutlined';\nimport SmokeFreeOutlinedIcon from '@material-ui/icons/SmokeFreeOutlined';\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined';\nimport Box from '../components/Box';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useSelector } from 'react-redux';\nimport { getUserStreaks } from '../actions/streakActions';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginTop: theme.spacing(3)\n  },\n  circularProgressBar: {\n    width: 150,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    margin: '0 auto'\n  },\n  customBar: {}\n}));\nexport default function Streaks() {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState('individual'),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        value = _React$useState4[0],\n        setValue = _React$useState4[1];\n\n  const _React$useState5 = React.useState(''),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        title = _React$useState6[0],\n        setTitle = _React$useState6[1];\n\n  const _React$useState7 = React.useState(),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        length = _React$useState8[0],\n        setLength = _React$useState8[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const streaks = useSelector(state => state.streaks);\n  useEffect(() => {\n    dispatch(getUserStreaks());\n  }, [dispatch]);\n\n  const handleNewStreak = event => {\n    const newStreak = {\n      id: streaks.length + 1,\n      squadId: 123,\n      title: title,\n      length: length,\n      icon: '',\n      streak: 0\n    };\n    setStreaks(existingStreaks => [...existingStreaks, newStreak]);\n    handleClose();\n  };\n\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Streaks\"), React.createElement(Divider, {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Button, {\n    startIcon: React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add Streak\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"New Streak\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Add the following details and hit submit to start a new streak!\"), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Title\",\n    type: \"text\",\n    onChange: e => setTitle(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"length\",\n    label: \"Length in Days\",\n    type: \"number\",\n    fullWidth: true,\n    onChange: e => setLength(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Is this an individal Streak or a squad Streak?\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"individual\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    label: \"Individual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"squad\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }),\n    label: \"Squad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleNewStreak,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, streaks.map((item, idx) => React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.circularProgressBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(CircularProgressbarWithChildren, {\n    value: item.streak,\n    maxValue: item.length,\n    styles: buildStyles({\n      pathColor: '#fe446c'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: '#fe446c'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, item.icon), React.createElement(\"div\", {\n    style: {\n      fontSize: '1.2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, item.streak, \" / \", item.length))), React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, item.title))))));\n}","map":{"version":3,"sources":["/Users/alecdown/apps/squad/client/src/pages/Streaks.js"],"names":["React","useEffect","useState","Typography","Divider","Grid","Button","ReactHtmlParser","processNodes","convertNodeToElement","htmlparser2","LocalBarOutlinedIcon","SmokeFreeOutlinedIcon","DirectionsRunOutlinedIcon","Box","CircularProgressbarWithChildren","buildStyles","makeStyles","AddIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","useSelector","getUserStreaks","useStyles","theme","formControl","marginTop","spacing","circularProgressBar","width","display","flexDirection","alignItems","justifyContent","textAlign","margin","customBar","Streaks","open","setOpen","value","setValue","title","setTitle","length","setLength","handleClickOpen","handleClose","handleChange","event","target","streaks","state","dispatch","handleNewStreak","newStreak","id","squadId","icon","streak","setStreaks","existingStreaks","classes","marginBottom","e","map","item","idx","pathColor","color","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Typography, Divider, Grid, Button } from '@material-ui/core/';\nimport ReactHtmlParser, {\n  processNodes,\n  convertNodeToElement,\n  htmlparser2\n} from 'react-html-parser';\nimport LocalBarOutlinedIcon from '@material-ui/icons/LocalBarOutlined';\nimport SmokeFreeOutlinedIcon from '@material-ui/icons/SmokeFreeOutlined';\nimport DirectionsRunOutlinedIcon from '@material-ui/icons/DirectionsRunOutlined';\nimport Box from '../components/Box';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useSelector } from 'react-redux';\nimport { getUserStreaks } from '../actions/streakActions';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginTop: theme.spacing(3)\n  },\n  circularProgressBar: {\n    width: 150,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    margin: '0 auto'\n  },\n  customBar: {}\n}));\n\nexport default function Streaks() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState('individual');\n  const [title, setTitle] = React.useState('');\n  const [length, setLength] = React.useState();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const streaks = useSelector(state => state.streaks);\n  useEffect(() => {\n    dispatch(getUserStreaks());\n  }, [dispatch]);\n\n  const handleNewStreak = event => {\n    const newStreak = {\n      id: streaks.length + 1,\n      squadId: 123,\n      title: title,\n      length: length,\n      icon: '',\n      streak: 0\n    };\n\n    setStreaks(existingStreaks => [...existingStreaks, newStreak]);\n    handleClose();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Streaks</Typography>\n      <Divider style={{ marginBottom: 20 }} />\n\n      <Button startIcon={<AddIcon />} onClick={handleClickOpen}>\n        Add Streak\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Streak</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add the following details and hit submit to start a new streak!\n          </DialogContentText>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            onChange={e => setTitle(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"length\"\n            label=\"Length in Days\"\n            type=\"number\"\n            fullWidth\n            onChange={e => setLength(e.target.value)}\n          />\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Is this an individal Streak or a squad Streak?</FormLabel>\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\n              <FormControlLabel value=\"individual\" control={<Radio />} label=\"Individual\" />\n              <FormControlLabel value=\"squad\" control={<Radio />} label=\"Squad\" />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleNewStreak}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Grid container spacing={2}>\n        {streaks.map((item, idx) => (\n          <Grid item xs={12} md={6} lg={4} key={idx}>\n            <Box>\n              <div className={classes.circularProgressBar}>\n                <CircularProgressbarWithChildren\n                  value={item.streak}\n                  maxValue={item.length}\n                  styles={buildStyles({\n                    pathColor: '#fe446c'\n                  })}\n                >\n                  <span style={{ color: '#fe446c' }}>{item.icon}</span>\n                  <div style={{ fontSize: '1.2rem' }}>\n                    {item.streak} / {item.length}\n                  </div>\n                </CircularProgressbarWithChildren>\n              </div>\n              <p style={{ textAlign: 'center' }}>{item.title}</p>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}