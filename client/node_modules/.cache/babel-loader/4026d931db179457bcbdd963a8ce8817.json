{"ast":null,"code":"import _slicedToArray from \"/Users/adown/apps/squad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adown/apps/squad/client/src/pages/Streaks.js\";\nimport React, { useState } from 'react';\nimport { Typography, Divider, Grid, Button } from '@material-ui/core/';\nimport Box from '../components/Box';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStreak } from '../actions/streakActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginTop: theme.spacing(3)\n  },\n  circularProgressBar: {\n    width: 150,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    margin: '0 auto'\n  },\n  subtitle: {\n    marginTop: 30,\n    marginBottom: 10\n  }\n}));\nexport default function Streaks() {\n  const streaks = useSelector(state => state.streaks);\n  const profileImage = useSelector(state => state.profile.avatar);\n  const squadId = useSelector(state => state.squad.id ? state.squad.id : null);\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState('individual'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        value = _useState4[0],\n        setValue = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        setTitle = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        length = _useState8[0],\n        setLength = _useState8[1];\n\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleNewStreak = event => {\n    const newStreak = {\n      squadId,\n      title: title,\n      length: length,\n      streakType: value\n    };\n    dispatch(createStreak(newStreak));\n    handleClose();\n  };\n\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Streaks\"), React.createElement(Divider, {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Button, {\n    startIcon: React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }),\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Add Streak\"), React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"New Streak\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Add the following details and hit submit to start a new streak!\"), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"title\",\n    label: \"Title\",\n    type: \"text\",\n    onChange: e => setTitle(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"length\",\n    label: \"Length in Days\",\n    type: \"number\",\n    fullWidth: true,\n    onChange: e => setLength(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(FormControl, {\n    component: \"fieldset\",\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Is this an individal Streak or a squad Streak?\"), React.createElement(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    value: value,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"individual\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }),\n    label: \"Individual\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(FormControlLabel, {\n    value: \"squad\",\n    control: React.createElement(Radio, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    label: \"Squad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleNewStreak,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"Submit\"))), React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Individual Streaks\"), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, streaks.filter(item => item.squadId === null).map((item, idx) => React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    avatar: React.createElement(Avatar, {\n      \"aria-label\": \"recipe\",\n      src: profileImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }),\n    action: React.createElement(IconButton, {\n      \"aria-label\": \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(MoreVertIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })),\n    title: item.title // subheader=\"September 14, 2016\"\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.circularProgressBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(CircularProgressbarWithChildren, {\n    value: (new Date() - Date.parse(item.createdAt)) / oneDay,\n    maxValue: item.length,\n    styles: buildStyles({\n      pathColor: '#fe446c'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: '#fe446c'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, item.icon), React.createElement(\"div\", {\n    style: {\n      fontSize: '1.2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, Math.floor((new Date() - Date.parse(item.createdAt)) / oneDay), \"/\", ' ', item.length))))))), React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.subtitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"Squad Streaks\"), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, streaks.filter(item => item.squadId !== null).map((item, idx) => React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    lg: 4,\n    key: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.circularProgressBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(CircularProgressbarWithChildren, {\n    value: (new Date() - Date.parse(item.createdAt)) / oneDay,\n    maxValue: item.length,\n    styles: buildStyles({\n      pathColor: '#fe446c'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    style: {\n      color: '#fe446c'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, item.icon), React.createElement(\"div\", {\n    style: {\n      fontSize: '1.2rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, Math.floor((new Date() - Date.parse(item.createdAt)) / oneDay), \"/\", ' ', item.length))), React.createElement(\"p\", {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, item.title))))));\n}","map":{"version":3,"sources":["/Users/adown/apps/squad/client/src/pages/Streaks.js"],"names":["React","useState","Typography","Divider","Grid","Button","Box","CircularProgressbarWithChildren","buildStyles","makeStyles","AddIcon","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","useSelector","useDispatch","createStreak","CardHeader","Avatar","MoreVertIcon","IconButton","useStyles","theme","formControl","marginTop","spacing","circularProgressBar","width","display","flexDirection","alignItems","justifyContent","textAlign","margin","subtitle","marginBottom","Streaks","streaks","state","profileImage","profile","avatar","squadId","squad","id","oneDay","open","setOpen","value","setValue","title","setTitle","length","setLength","dispatch","handleClickOpen","handleClose","handleChange","event","target","handleNewStreak","newStreak","streakType","classes","e","filter","item","map","idx","Date","parse","createdAt","pathColor","color","icon","fontSize","Math","floor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Typography, Divider, Grid, Button } from '@material-ui/core/';\nimport Box from '../components/Box';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createStreak } from '../actions/streakActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    marginTop: theme.spacing(3)\n  },\n  circularProgressBar: {\n    width: 150,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    margin: '0 auto'\n  },\n  subtitle: {\n    marginTop: 30,\n    marginBottom: 10\n  }\n}));\n\nexport default function Streaks() {\n  const streaks = useSelector(state => state.streaks);\n  const profileImage = useSelector(state => state.profile.avatar);\n  const squadId = useSelector(state => (state.squad.id ? state.squad.id : null));\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('individual');\n  const [title, setTitle] = useState('');\n  const [length, setLength] = useState();\n\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const handleNewStreak = event => {\n    const newStreak = {\n      squadId,\n      title: title,\n      length: length,\n      streakType: value\n    };\n\n    dispatch(createStreak(newStreak));\n\n    handleClose();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Streaks</Typography>\n      <Divider style={{ marginBottom: 20 }} />\n\n      <Button startIcon={<AddIcon />} onClick={handleClickOpen}>\n        Add Streak\n      </Button>\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">New Streak</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Add the following details and hit submit to start a new streak!\n          </DialogContentText>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"text\"\n            onChange={e => setTitle(e.target.value)}\n            fullWidth\n          />\n          <TextField\n            margin=\"dense\"\n            id=\"length\"\n            label=\"Length in Days\"\n            type=\"number\"\n            fullWidth\n            onChange={e => setLength(e.target.value)}\n          />\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <FormLabel component=\"legend\">Is this an individal Streak or a squad Streak?</FormLabel>\n            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange}>\n              <FormControlLabel value=\"individual\" control={<Radio />} label=\"Individual\" />\n              <FormControlLabel value=\"squad\" control={<Radio />} label=\"Squad\" />\n            </RadioGroup>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleNewStreak}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Typography variant=\"h4\" className={classes.subtitle}>\n        Individual Streaks\n      </Typography>\n      <Grid container spacing={2}>\n        {streaks\n          .filter(item => item.squadId === null)\n          .map((item, idx) => (\n            <Grid item xs={12} md={6} lg={4} key={idx}>\n              <Box>\n                <CardHeader\n                  avatar={<Avatar aria-label=\"recipe\" src={profileImage} />}\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title={item.title}\n                  // subheader=\"September 14, 2016\"\n                />\n                <div className={classes.circularProgressBar}>\n                  <CircularProgressbarWithChildren\n                    value={(new Date() - Date.parse(item.createdAt)) / oneDay}\n                    maxValue={item.length}\n                    styles={buildStyles({\n                      pathColor: '#fe446c'\n                    })}\n                  >\n                    <span style={{ color: '#fe446c' }}>{item.icon}</span>\n                    <div style={{ fontSize: '1.2rem' }}>\n                      {Math.floor((new Date() - Date.parse(item.createdAt)) / oneDay)}/{' '}\n                      {item.length}\n                    </div>\n                  </CircularProgressbarWithChildren>\n                </div>\n              </Box>\n            </Grid>\n          ))}\n      </Grid>\n\n      <Typography variant=\"h4\" className={classes.subtitle}>\n        Squad Streaks\n      </Typography>\n      <Grid container spacing={2}>\n        {streaks\n          .filter(item => item.squadId !== null)\n          .map((item, idx) => (\n            <Grid item xs={12} md={6} lg={4} key={idx}>\n              <Box>\n                <div className={classes.circularProgressBar}>\n                  <CircularProgressbarWithChildren\n                    value={(new Date() - Date.parse(item.createdAt)) / oneDay}\n                    maxValue={item.length}\n                    styles={buildStyles({\n                      pathColor: '#fe446c'\n                    })}\n                  >\n                    <span style={{ color: '#fe446c' }}>{item.icon}</span>\n                    <div style={{ fontSize: '1.2rem' }}>\n                      {Math.floor((new Date() - Date.parse(item.createdAt)) / oneDay)}/{' '}\n                      {item.length}\n                    </div>\n                  </CircularProgressbarWithChildren>\n                </div>\n                <p style={{ textAlign: 'center' }}>{item.title}</p>\n              </Box>\n            </Grid>\n          ))}\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}