{"ast":null,"code":"import _slicedToArray from \"/Users/alecdown/apps/squad/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alecdown/apps/squad/client/src/pages/Account.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { Typography, Divider, TextField, Grid, Button } from '@material-ui/core/';\nimport Box from '../components/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport { updateUserProfile, updatePassword } from '../actions/profileActions';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  formDisplay: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  formDisplaySingleLine: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  profileImage: {\n    height: 150,\n    width: 150,\n    borderRadius: '50%',\n    margin: '20px 0'\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  subText: {\n    color: 'rgba(0,0,0,0.7)',\n    fontSize: '0.7rem',\n    textAlign: 'center'\n  }\n}));\nexport default function Account() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        password = _useState2[0],\n        setPassword = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newPassword = _useState4[0],\n        setNewPassword = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newPassword2 = _useState6[0],\n        setNewPassword2 = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        email = _useState8[0],\n        setEmail = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        firstName = _useState10[0],\n        setFirstName = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        lastName = _useState12[0],\n        setLastName = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        phone = _useState14[0],\n        setPhone = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        bio = _useState16[0],\n        setBio = _useState16[1];\n\n  const _useState17 = useState(''),\n        _useState18 = _slicedToArray(_useState17, 2),\n        handle = _useState18[0],\n        setHandle = _useState18[1];\n\n  const errors = useSelector(state => state.errors);\n  const profile = useSelector(state => state.profile);\n  const userEmail = useSelector(state => state.auth.user.email);\n  useEffect(() => {\n    setHandle(profile.handle);\n  }, [profile.handle]);\n  useEffect(() => {\n    setBio(profile.bio);\n  }, [profile.bio]);\n  useEffect(() => {\n    setFirstName(profile.firstName);\n  }, [profile.firstName]);\n  useEffect(() => {\n    setLastName(profile.lastName);\n  }, [profile.lastName]);\n  useEffect(() => {\n    setEmail(userEmail);\n  }, [userEmail]);\n  useEffect(() => {\n    setPhone(profile.phone);\n  }, [profile.phone]);\n  useEffect(() => {\n    setPassword(profile.password);\n  }, [profile.password]);\n  useEffect(() => {\n    setNewPassword(profile.newPassword);\n  }, [profile.newPassword]);\n  useEffect(() => {\n    setNewPassword2(profile.newPassword2);\n  }, [profile.newPassword2]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSavePublicInformation = () => {\n    const publicInformation = {\n      handle,\n      bio\n    };\n    dispatch(updateUserProfile(publicInformation));\n  };\n\n  const handleSavePrivateInformation = () => {\n    const privateInformation = {\n      firstName,\n      lastName,\n      phone\n    };\n    dispatch(updateUserProfile(privateInformation));\n  };\n\n  const handleUpdatePassword = () => {\n    const passwordInformation = {\n      password,\n      newPassword,\n      newPassword2\n    };\n    dispatch(updatePassword(passwordInformation));\n    setNewPassword('');\n    setNewPassword2('');\n    setCurrentPassword('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Account\"), React.createElement(Divider, {\n    style: {\n      marginBottom: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Public Information\"), React.createElement(TextField, {\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"handle\",\n    label: \"Handle\",\n    name: \"handle\",\n    type: \"text\",\n    autoComplete: \"handle\",\n    value: handle,\n    onChange: e => setHandle(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    multiline: true,\n    rows: \"4\",\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"bio\",\n    label: \"Bio\",\n    name: \"bio\",\n    type: \"text\",\n    autoComplete: \"bio\",\n    value: bio,\n    onChange: e => setBio(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleSavePublicInformation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Private Information\"), React.createElement(\"div\", {\n    className: classes.formDisplay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    required: true,\n    style: {\n      width: 234\n    },\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"firstName\",\n    label: \"First name\",\n    name: \"firstName\",\n    type: \"text\",\n    autoComplete: \"firstName\",\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    required: true,\n    style: {\n      width: 234\n    },\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"lastName\",\n    label: \"Last name\",\n    name: \"lastName\",\n    type: \"text\",\n    autoComplete: \"lastName\",\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.formDisplaySingleLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    disabled: true,\n    required: true,\n    fullWidth: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    autoComplete: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.formDisplaySingleLine,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"phone\",\n    label: \"Phone\",\n    name: \"phone\",\n    type: \"text\",\n    autoComplete: \"phone\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: handleSavePrivateInformation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, \"Save\"))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"Reset Password\"), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Please enter your current password to get started.\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    error: errors.password && true,\n    helperText: errors.password,\n    fullWidth: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    autoComplete: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Please enter a new password.\"), React.createElement(TextField, {\n    error: errors.newPassword && true,\n    helperText: errors.newPassword,\n    fullWidth: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"newPassword\",\n    label: \"New Password\",\n    name: \"newPassword\",\n    type: \"password\",\n    autoComplete: \"newPassword\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: errors.newPassword2 && true,\n    helperText: errors.newPassword2,\n    fullWidth: true,\n    variant: \"outlined\",\n    margin: \"normal\",\n    id: \"newPassword2\",\n    label: \"Password\",\n    name: \"newPassword2\",\n    type: \"password\",\n    autoComplete: \"newPassword2\",\n    value: newPassword2,\n    onChange: e => setNewPassword2(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleUpdatePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Save\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \"Profile Image\"), React.createElement(\"div\", {\n    className: classes.flexBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: profile.avatar,\n    alt: \"profile\",\n    className: classes.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }), React.createElement(Button, {\n    startIcon: React.createElement(CloudUploadOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }),\n    style: {\n      paddingRight: 20,\n      paddingLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, \"Upload\"), React.createElement(\"p\", {\n    className: classes.subText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, \"For best results, use an image at least 128px by 128px in .jpg format\"))))));\n}","map":{"version":3,"sources":["/Users/alecdown/apps/squad/client/src/pages/Account.js"],"names":["React","useState","useEffect","useDispatch","useSelector","axios","Typography","Divider","TextField","Grid","Button","Box","makeStyles","CloudUploadOutlinedIcon","updateUserProfile","updatePassword","useStyles","theme","root","flexGrow","formDisplay","margin","spacing","formDisplaySingleLine","profileImage","height","width","borderRadius","flexBox","display","alignItems","flexDirection","subText","color","fontSize","textAlign","Account","password","setPassword","newPassword","setNewPassword","newPassword2","setNewPassword2","email","setEmail","firstName","setFirstName","lastName","setLastName","phone","setPhone","bio","setBio","handle","setHandle","errors","state","profile","userEmail","auth","user","classes","dispatch","handleSavePublicInformation","publicInformation","handleSavePrivateInformation","privateInformation","handleUpdatePassword","passwordInformation","setCurrentPassword","marginBottom","e","target","value","avatar","paddingRight","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport { Typography, Divider, TextField, Grid, Button } from '@material-ui/core/';\nimport Box from '../components/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport { updateUserProfile, updatePassword } from '../actions/profileActions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  formDisplay: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  formDisplaySingleLine: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  profileImage: {\n    height: 150,\n    width: 150,\n    borderRadius: '50%',\n    margin: '20px 0'\n  },\n  flexBox: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  subText: {\n    color: 'rgba(0,0,0,0.7)',\n    fontSize: '0.7rem',\n    textAlign: 'center'\n  }\n}));\n\nexport default function Account() {\n  const [password, setPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newPassword2, setNewPassword2] = useState('');\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [bio, setBio] = useState('');\n  const [handle, setHandle] = useState('');\n\n  const errors = useSelector(state => state.errors);\n  const profile = useSelector(state => state.profile);\n  const userEmail = useSelector(state => state.auth.user.email);\n\n  useEffect(() => {\n    setHandle(profile.handle);\n  }, [profile.handle]);\n\n  useEffect(() => {\n    setBio(profile.bio);\n  }, [profile.bio]);\n\n  useEffect(() => {\n    setFirstName(profile.firstName);\n  }, [profile.firstName]);\n\n  useEffect(() => {\n    setLastName(profile.lastName);\n  }, [profile.lastName]);\n\n  useEffect(() => {\n    setEmail(userEmail);\n  }, [userEmail]);\n\n  useEffect(() => {\n    setPhone(profile.phone);\n  }, [profile.phone]);\n\n  useEffect(() => {\n    setPassword(profile.password);\n  }, [profile.password]);\n\n  useEffect(() => {\n    setNewPassword(profile.newPassword);\n  }, [profile.newPassword]);\n\n  useEffect(() => {\n    setNewPassword2(profile.newPassword2);\n  }, [profile.newPassword2]);\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const handleSavePublicInformation = () => {\n    const publicInformation = { handle, bio };\n    dispatch(updateUserProfile(publicInformation));\n  };\n\n  const handleSavePrivateInformation = () => {\n    const privateInformation = { firstName, lastName, phone };\n    dispatch(updateUserProfile(privateInformation));\n  };\n\n  const handleUpdatePassword = () => {\n    const passwordInformation = { password, newPassword, newPassword2 };\n    dispatch(updatePassword(passwordInformation));\n    setNewPassword('');\n    setNewPassword2('');\n    setCurrentPassword('');\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h4\">Account</Typography>\n      <Divider style={{ marginBottom: 20 }} />\n\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Box>\n            <Typography variant=\"h5\">Public Information</Typography>\n            <TextField\n              required\n              variant=\"outlined\"\n              margin=\"normal\"\n              id=\"handle\"\n              label=\"Handle\"\n              name=\"handle\"\n              type=\"text\"\n              autoComplete=\"handle\"\n              value={handle}\n              onChange={e => setHandle(e.target.value)}\n            />\n            <TextField\n              multiline\n              rows=\"4\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              id=\"bio\"\n              label=\"Bio\"\n              name=\"bio\"\n              type=\"text\"\n              autoComplete=\"bio\"\n              value={bio}\n              onChange={e => setBio(e.target.value)}\n            />\n            <Button onClick={handleSavePublicInformation}>Save</Button>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} lg={6}>\n          <Box>\n            <Typography variant=\"h5\">Private Information</Typography>\n            <div className={classes.formDisplay}>\n              <TextField\n                required\n                style={{ width: 234 }}\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"firstName\"\n                label=\"First name\"\n                name=\"firstName\"\n                type=\"text\"\n                autoComplete=\"firstName\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n              />\n              <TextField\n                required\n                style={{ width: 234 }}\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"lastName\"\n                label=\"Last name\"\n                name=\"lastName\"\n                type=\"text\"\n                autoComplete=\"lastName\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n              />\n            </div>\n            <div className={classes.formDisplaySingleLine}>\n              <TextField\n                disabled\n                required\n                fullWidth\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </div>\n            <div className={classes.formDisplaySingleLine}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"phone\"\n                label=\"Phone\"\n                name=\"phone\"\n                type=\"text\"\n                autoComplete=\"phone\"\n                value={phone}\n                onChange={e => setPhone(e.target.value)}\n              />\n            </div>\n            <Button onClick={handleSavePrivateInformation}>Save</Button>\n          </Box>\n        </Grid>\n\n        <Grid item xs={12} lg={6}>\n          <Box>\n            <Typography variant=\"h5\">Reset Password</Typography>\n            <Typography variant=\"body2\">\n              Please enter your current password to get started.\n            </Typography>\n            <form>\n              <TextField\n                error={errors.password && true}\n                helperText={errors.password}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"password\"\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n              <Typography variant=\"body2\">Please enter a new password.</Typography>\n              <TextField\n                error={errors.newPassword && true}\n                helperText={errors.newPassword}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"newPassword\"\n                label=\"New Password\"\n                name=\"newPassword\"\n                type=\"password\"\n                autoComplete=\"newPassword\"\n                value={newPassword}\n                onChange={e => setNewPassword(e.target.value)}\n              />\n              <TextField\n                error={errors.newPassword2 && true}\n                helperText={errors.newPassword2}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"normal\"\n                id=\"newPassword2\"\n                label=\"Password\"\n                name=\"newPassword2\"\n                type=\"password\"\n                autoComplete=\"newPassword2\"\n                value={newPassword2}\n                onChange={e => setNewPassword2(e.target.value)}\n              />\n              <Button onClick={handleUpdatePassword}>Save</Button>\n            </form>\n          </Box>\n        </Grid>\n        <Grid item xs={12} lg={4}>\n          <Box>\n            <Typography variant=\"h5\">Profile Image</Typography>\n            <div className={classes.flexBox}>\n              <img src={profile.avatar} alt=\"profile\" className={classes.profileImage} />\n              <Button\n                startIcon={<CloudUploadOutlinedIcon />}\n                style={{ paddingRight: 20, paddingLeft: 20 }}\n              >\n                Upload\n              </Button>\n              <p className={classes.subText}>\n                For best results, use an image at least 128px by 128px in .jpg format\n              </p>\n            </div>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}