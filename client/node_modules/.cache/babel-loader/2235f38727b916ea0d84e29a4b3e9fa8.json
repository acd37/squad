{"ast":null,"code":"var _jsxFileName = \"/Users/alecdown/apps/squad/client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwtDecode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './utils/PrivateRoute';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Profile from './pages/Profile';\nimport Account from './pages/Account'; // redux\n\nimport { setCurrentUser, logoutUser } from './actions/authActions'; // persistent login\n\nif (localStorage.squad) {\n  setAuthToken(localStorage.squad); // decode token and get user info\n\n  const decoded = jwtDecode(localStorage.squad); // set user and isAuth\n\n  store.dispatch(setCurrentUser(decoded)); // check for expired token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/';\n  }\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"application\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/account\",\n    component: Account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(PrivateRoute, {\n    exact: true,\n    path: \"/profile\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))))));\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/alecdown/apps/squad/client/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","withRouter","Provider","store","jwtDecode","setAuthToken","PrivateRoute","Login","Dashboard","Profile","Account","setCurrentUser","logoutUser","localStorage","squad","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,UAAjD,QAAmE,kBAAnE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CAEA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C,C,CAEA;;AACA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBT,EAAAA,YAAY,CAACQ,YAAY,CAACC,KAAd,CAAZ,CADsB,CAGtB;;AACA,QAAMC,OAAO,GAAGX,SAAS,CAACS,YAAY,CAACC,KAAd,CAAzB,CAJsB,CAMtB;;AACAX,EAAAA,KAAK,CAACa,QAAN,CAAeL,cAAc,CAACI,OAAD,CAA7B,EAPsB,CAStB;;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC;;AACA,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7Bd,IAAAA,KAAK,CAACa,QAAN,CAAeJ,UAAU,EAAzB;AACAS,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACD;AACF;;AAED,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAErB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEI,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,YAAzB;AAAsC,IAAA,SAAS,EAAEC,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,UAAzB;AAAoC,IAAA,SAAS,EAAEE,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,YAAD;AAAc,IAAA,KAAK,MAAnB;AAAoB,IAAA,IAAI,EAAC,UAAzB;AAAoC,IAAA,SAAS,EAAED,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF,CADF,CADF;AAgBD;;AAED,eAAeR,UAAU,CAACuB,GAAD,CAAzB","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, withRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwtDecode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './utils/PrivateRoute';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Profile from './pages/Profile';\nimport Account from './pages/Account';\n\n// redux\nimport { setCurrentUser, logoutUser } from './actions/authActions';\n\n// persistent login\nif (localStorage.squad) {\n  setAuthToken(localStorage.squad);\n\n  // decode token and get user info\n  const decoded = jwtDecode(localStorage.squad);\n\n  // set user and isAuth\n  store.dispatch(setCurrentUser(decoded));\n\n  // check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/';\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Router>\n          <div className=\"application\">\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/account\" component={Account} />\n              <PrivateRoute exact path=\"/profile\" component={Profile} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}